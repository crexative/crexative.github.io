---
import { useTranslations } from '../i18n';

interface Props {
  lang: string;
}

const { lang } = Astro.props;
const t = useTranslations(lang as 'en' | 'es');

const services = [
  {
    name: t('services.web.title'),
    description: t('services.web.description'),
    icon: 'web-development',
    techTags: ['React', 'Node.js', 'TypeScript']
  },
  {
    name: t('services.mobile.title'),
    description: t('services.mobile.description'),
    icon: 'mobile-development',
    techTags: ['React Native', 'Flutter', 'iOS', 'Android']
  },
  {
    name: t('services.uiux.title'),
    description: t('services.uiux.description'),
    icon: 'ui-ux-design',
    techTags: ['Figma', 'Adobe XD', 'Prototyping']
  },
  {
    name: t('services.ecommerce.title'),
    description: t('services.ecommerce.description'),
    icon: 'ecommerce',
    techTags: ['Shopify', 'WooCommerce', t('misc.paymentIntegration')]
  }
];

const structuredData = {
  '@context': 'https://schema.org',
  '@type': 'Service',
  provider: {
    '@type': 'Organization',
    name: 'CREXATIVE',
    url: 'https://crexative.com'
  },
  serviceType: 'Software Development',
  offers: services.map(service => ({
    '@type': 'Offer',
    name: service.name,
    description: service.description,
    category: 'Software Development'
  }))
};
---

<section id="services" class="services" itemscope itemtype="https://schema.org/Organization">
  <div class="container">
    <div class="section-header">
      <p class="subtitle">{t('services.title')}</p>
      <h2>{t('services.subtitle')}</h2>
      <p class="section-description">
        {t('services.subtitle')}
      </p>
    </div>
    
    <div class="services-grid" itemprop="makesOffer" itemscope itemtype="https://schema.org/Offer">
      {services.map((service, index) => {
        const icons = [
          // Web Development Icon
          <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
            <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
            <line x1="3" y1="9" x2="21" y2="9"></line>
            <line x1="9" y1="21" x2="9" y2="9"></line>
          </svg>,
          // Mobile Development Icon
          <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
            <rect x="5" y="2" width="14" height="20" rx="2" ry="2"></rect>
            <line x1="12" y1="18" x2="12" y2="18"></line>
          </svg>,
          // UI/UX Design Icon
          <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
            <path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>
          </svg>,
          // E-commerce Icon
          <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" aria-hidden="true">
            <circle cx="8" cy="21" r="1"></circle>
            <circle cx="19" cy="21" r="1"></circle>
            <path d="M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12"></path>
          </svg>
        ];
        
        return (
          <article class="service-card" itemscope itemtype="https://schema.org/Service">
            <div class="service-icon">
              {icons[index]}
            </div>
            <h3 itemprop="name">{service.name}</h3>
            <p itemprop="description">{service.description}</p>
            <div class="service-tech">
              {service.techTags.map(tag => (
                <span class="tech-tag">{tag}</span>
              ))}
            </div>
          </article>
        );
      })}
    </div>
  </div>
  
  <!-- Structured Data -->
  <script type="application/ld+json" set:html={JSON.stringify(structuredData)} is:inline />
</section>

<style>
  .services {
    padding: 100px 0;
  }
  
  .section-header {
    text-align: center;
    margin-bottom: 60px;
  }
  
  .subtitle {
    font-size: 14px;
    text-transform: uppercase;
    letter-spacing: 2px;
    margin-bottom: 15px;
    color: var(--text-gray);
  }

  .section-description {
    max-width: 600px;
    margin: 0 auto 50px;
    font-size: 16px;
    line-height: 1.6;
    color: var(--text-gray);
  }
  
  h2 {
    font-size: 42px;
    font-weight: 700;
    margin-bottom: 20px;
  }
  
  .services-grid {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
    align-items: stretch;
    gap: 40px;
    margin-top: 20px;
    width: 100%;
  }
  
  .service-card {
    background-color: var(--bg-color);
    border-radius: 12px;
    padding: 35px 30px;
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1), 
                box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1),
                border-color 0.3s ease;
    border: 2px solid var(--border-color);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
    position: relative;
    overflow: hidden;
    will-change: transform;
    flex: 1 1 calc(50% - 20px);
    min-width: 300px;
    max-width: 500px;
  }
  
  .service-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, var(--primary-color), rgba(0, 225, 199, 0.6));
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .service-card:hover::before {
    transform: scaleX(1);
  }
  
  .service-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 40px rgba(0, 225, 199, 0.15);
    border-color: var(--primary-color);
  }
  
  .service-icon {
    color: var(--primary-color);
    margin-bottom: 25px;
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }
  
  h3 {
    font-size: 22px;
    margin-bottom: 15px;
    font-weight: 600;
    color: var(--text-color);
  }
  
  .service-card p {
    color: var(--text-gray);
    font-size: 15px;
    line-height: 1.7;
    margin-bottom: 20px;
  }

  .service-tech {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-top: 20px;
  }

  .tech-tag {
    background-color: rgba(0, 225, 199, 0.1);
    color: var(--primary-color);
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 12px;
    font-weight: 500;
    border: 1px solid rgba(0, 225, 199, 0.2);
    transition: all 0.2s ease;
  }

  .tech-tag:hover {
    background-color: var(--primary-color);
    color: #000;
    transform: scale(1.05);
  }
  
  @media (max-width: 768px) {
    .services {
      padding: 80px 0;
    }

    .services-grid {
      gap: 25px;
      justify-content: center;
    }

    .service-card {
      flex: 1 1 100%;
      max-width: 100%;
      min-width: auto;
      padding: 25px 20px;
    }
    
    h2 {
      font-size: 32px;
    }

    .service-card h3 {
      font-size: 20px;
    }

    .section-description {
      font-size: 16px;
    }
  }

  @media (max-width: 480px) {
    .services {
      padding: 60px 0;
    }

    .services-grid {
      gap: 20px;
    }

    .service-card {
      padding: 20px 16px;
    }

    h2 {
      font-size: 28px;
    }

    .service-card h3 {
      font-size: 18px;
    }

    .service-card p {
      font-size: 14px;
    }
  }
</style>