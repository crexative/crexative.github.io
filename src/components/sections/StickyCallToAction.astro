---
import { useTranslations } from '../../i18n';
import { CONTACT_INFO } from '../../config/site.config';

interface Props {
  lang: string;
}

const { lang } = Astro.props;
const t = useTranslations(lang as 'en' | 'es');

// WhatsApp link with pre-filled message
const whatsappMessage = encodeURIComponent(t('contact.whatsappMessage'));
const whatsappLink = `https://wa.me/${CONTACT_INFO.whatsapp}?text=${whatsappMessage}`;
---

<div class="sticky-cta" id="stickyCTA">
  <a href={whatsappLink} target="_blank" rel="noopener noreferrer" class="sticky-btn" aria-label={t('sticky.cta')}>
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
      <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413z"/>
    </svg>
    <span class="sticky-text">{t('sticky.cta')}</span>
  </a>

  <div class="sticky-tooltip">
    {t('sticky.subtitle')}
  </div>
</div>

<style>
  .sticky-cta {
    position: fixed;
    bottom: 30px;
    right: 30px;
    z-index: 1000;
    opacity: 0;
    transform: translateY(100px);
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .sticky-cta.visible {
    opacity: 1;
    transform: translateY(0);
  }
  
  .sticky-btn {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 16px 24px;
    background: #25D366;
    color: white;
    border-radius: 50px;
    text-decoration: none;
    font-weight: 600;
    font-size: 16px;
    box-shadow: 0 10px 30px rgba(37, 211, 102, 0.4);
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    position: relative;
    overflow: hidden;
    border: none;
    cursor: pointer;
    font-family: 'Inter', sans-serif;
  }
  
  .sticky-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.6s ease;
  }
  
  .sticky-btn:hover::before {
    left: 100%;
  }
  
  .sticky-btn:hover {
    transform: translateY(-4px) scale(1.05);
    box-shadow: 0 20px 40px rgba(37, 211, 102, 0.5);
    background: #128C7E;
  }
  
  .sticky-btn svg {
    transition: transform 0.3s ease;
  }
  
  .sticky-btn:hover svg {
    transform: rotate(15deg);
  }
  
  .sticky-text {
    font-weight: 600;
    letter-spacing: 0.5px;
  }
  
  .sticky-tooltip {
    position: absolute;
    bottom: 100%;
    right: 0;
    background: var(--text-color);
    color: white;
    padding: 8px 16px;
    border-radius: 8px;
    font-size: 14px;
    white-space: nowrap;
    opacity: 0;
    transform: translateY(10px);
    transition: all 0.3s ease;
    pointer-events: none;
    margin-bottom: 8px;
  }
  
  .sticky-tooltip::after {
    content: '';
    position: absolute;
    top: 100%;
    right: 20px;
    border: 6px solid transparent;
    border-top-color: var(--text-color);
  }
  
  .sticky-btn:hover + .sticky-tooltip {
    opacity: 1;
    transform: translateY(0);
  }
  
  /* Pulse animation */
  .sticky-btn::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    background: #25D366;
    border-radius: 50px;
    transform: translate(-50%, -50%);
    opacity: 0;
    animation: pulse 3s infinite;
    z-index: -1;
  }

  @keyframes pulse {
    0% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.8;
    }
    70% {
      transform: translate(-50%, -50%) scale(1.3);
      opacity: 0;
    }
    100% {
      transform: translate(-50%, -50%) scale(1.3);
      opacity: 0;
    }
  }
  
  @media (max-width: 768px) {
    .sticky-cta {
      bottom: 20px;
      right: 20px;
    }
    
    .sticky-btn {
      padding: 14px 20px;
      font-size: 14px;
    }
    
    .sticky-text {
      display: none;
    }
    
    .sticky-btn {
      width: 56px;
      height: 56px;
      border-radius: 50%;
      justify-content: center;
      padding: 0;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const stickyCTA = document.getElementById('stickyCTA');
    const heroSection = document.querySelector('.hero');

    // Show/hide sticky CTA based on scroll position
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (!entry.isIntersecting) {
          stickyCTA.classList.add('visible');
        } else {
          stickyCTA.classList.remove('visible');
        }
      });
    }, {
      threshold: 0.1
    });

    if (heroSection) {
      observer.observe(heroSection);
    }
  });
</script>